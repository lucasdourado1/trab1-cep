{"version":3,"sources":["App.js","index.js"],"names":["App","useState","enderecos","setEnderecos","cep","setCep","uf","setUf","cidade","setCidade","logradouro","setLogradouro","a","url","fetch","then","response","json","data","uri","console","log","length","undefined","catch","error","alert","ListarEnderecos","props","lista","map","endr","bairro","localidade","toString","className","name","type","onChange","e","target","value","maxLength","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAkGeA,MA/Ff,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAESF,mBAAS,IAFlB,mBAENG,EAFM,KAEDC,EAFC,OAGOJ,mBAAS,IAHhB,mBAGNK,EAHM,KAGFC,EAHE,OAIeN,mBAAS,IAJxB,mBAINO,EAJM,KAIEC,EAJF,OAKuBR,mBAAS,IALhC,mBAKNS,EALM,KAKMC,EALN,iDAOb,4BAAAC,EAAA,6DACET,EAAa,IACTU,EAFN,4BAKIA,GADS,KAART,EACE,UAAOA,EAAP,UAEA,UAAOE,EAAP,YAAaE,EAAb,YAAuBE,EAAvB,UAPP,SASQI,MAAMD,GACTE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAAMD,EACZE,QAAQC,IAAIH,EAAKI,QACdJ,EAAKI,OAAS,QAAqBC,IAAhBL,EAAKI,OACzBH,GAAOhB,EAAa,CAACe,IAErBC,GAAOhB,EAAae,MAGvBM,OAAM,SAAUC,GACfC,MAAM,mFArBZ,OAwBErB,EAAO,IAxBT,4CAPa,sBAkCb,SAASsB,EAAgBC,GACvB,IACMC,EADYD,EAAM1B,UACA4B,KAAI,SAACC,GAAD,OAC1B,+BACE,6BAAKA,EAAKC,SACV,6BAAKD,EAAK3B,MACV,6BAAK2B,EAAKE,aACV,6BAAKF,EAAKrB,aACV,6BAAKqB,EAAKzB,OALHyB,EAAKG,eAQhB,OACE,kCACE,gCACE,+BACE,wCACA,qCACA,4CACA,4CACA,yCAGJ,gCACGL,OAMT,OACE,qBAAKM,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sEACA,kHACA,sBAAKA,UAAU,UAAf,UACE,gCACE,qCAAO,2DAAP,OACA,uBAAOC,KAAK,MAAMC,KAAK,SAASC,SAAU,SAAAC,GAAC,OAAIlC,EAAOkC,EAAEC,OAAOC,aAEjE,gCACE,qCAAW,uBAAOL,KAAK,KAAKC,KAAK,OAAOK,UAAU,IAAIJ,SAAU,SAAAC,GAAC,OAAIhC,EAAMgC,EAAEC,OAAOC,UACpF,yCAAe,uBAAOL,KAAK,SAASC,KAAK,OAAOC,SAAU,SAAAC,GAAC,OAAI9B,EAAU8B,EAAEC,OAAOC,UAClF,6CAAmB,uBAAOL,KAAK,aAAaC,KAAK,OAAOC,SAAU,SAAAC,GAAC,OAAI5B,EAAc4B,EAAEC,OAAOC,gBAGlG,wBAAQJ,KAAK,SAASM,QA/Ef,2CA+EP,sCAGEzC,EAAUoB,OAAS,EAAI,cAACK,EAAD,CAAiBzB,UAAWA,IAAgB,GAGnEA,EAAUoB,OAAS,GACnB,wBAAQe,KAAK,SAASM,QAAS,kBAAMxC,EAAa,KAAKgC,UAAU,cAAjE,qCCrFVS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.98ef2e4b.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [enderecos, setEnderecos] = useState([]);\n  const [cep, setCep] = useState('');\n  const [uf, setUf] = useState('');\n  const [cidade, setCidade] = useState('');\n  const [logradouro, setLogradouro] = useState('');\n\n  async function findAddress(){\n    setEnderecos([]);\n    let url = `https://viacep.com.br/ws/`;\n\n    if(cep !== \"\"){\n      url += `${cep}/json/`;\n    }else{\n      url += `${uf}/${cidade}/${logradouro}/json/`;\n    }\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        const uri = data;\n        console.log(data.length);\n        if(data.length < 1 || data.length === undefined){\n          uri && setEnderecos([data]);\n        }else{\n          uri && setEnderecos(data);\n        }\n      })\n      .catch(function (error) {\n        alert('Houve um problema ao efetuar a requisição! Por favor, tente novamente.');\n      });\n    \n    setCep(\"\");\n  }\n\n  function ListarEnderecos(props){\n    const enderecos = props.enderecos\n    const lista = enderecos.map((endr) =>\n      <tr key={endr.toString()}>\n        <td>{endr.bairro}</td>\n        <td>{endr.cep}</td>\n        <td>{endr.localidade}</td>\n        <td>{endr.logradouro}</td>\n        <td>{endr.uf}</td>\n      </tr>\n    );\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Bairro</th>\n            <th>CEP</th>\n            <th>Localidade</th>\n            <th>Logradouro</th>\n            <th>UF</th>\n          </tr>\n        </thead>\n        <tbody>\n          {lista}\n        </tbody>\n      </table>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Ache qualquer endereço do Brasil!</h1>\n        <h2>Escolha uma das opções abaixo para encontrar a localização desejada.</h2>\n        <div className=\"options\">\n          <div>\n            <p>CEP <small>(apenas os números)</small>:</p>\n            <input name=\"cep\" type=\"number\" onChange={e => setCep(e.target.value)}></input>\n          </div>\n          <div>\n            <p>UF: </p><input name=\"uf\" type=\"text\" maxLength=\"2\" onChange={e => setUf(e.target.value)}></input>\n            <p>Cidade: </p><input name=\"cidade\" type=\"text\" onChange={e => setCidade(e.target.value)}></input>\n            <p>Logradouro: </p><input name=\"logradouro\" type=\"text\" onChange={e => setLogradouro(e.target.value)}></input>\n          </div>\n        </div>\n        <button type='button' onClick={findAddress}>Encontrar o endereço!</button>\n\n        {\n          enderecos.length > 0 ? <ListarEnderecos enderecos={enderecos} /> : \"\"\n        }\n\n        { enderecos.length > 0 &&\n          <button type='button' onClick={() => setEnderecos([])} className=\"clearButton\">\n            Limpar Resultados\n          </button>\n        }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}